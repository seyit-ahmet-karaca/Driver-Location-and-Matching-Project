// Code generated by MockGen. DO NOT EDIT.
// Source: .\service\locationService.go

// Package mock is a generated GoMock package.
package mock

import (
	dto "driverlocation/dto"
	model "driverlocation/model"
	multipart "mime/multipart"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockILocationService is a mock of ILocationService interface.
type MockILocationService struct {
	ctrl     *gomock.Controller
	recorder *MockILocationServiceMockRecorder
}

// MockILocationServiceMockRecorder is the mock recorder for MockILocationService.
type MockILocationServiceMockRecorder struct {
	mock *MockILocationService
}

// NewMockILocationService creates a new mock instance.
func NewMockILocationService(ctrl *gomock.Controller) *MockILocationService {
	mock := &MockILocationService{ctrl: ctrl}
	mock.recorder = &MockILocationServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockILocationService) EXPECT() *MockILocationServiceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockILocationService) Create(arg0 *model.Point) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockILocationServiceMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockILocationService)(nil).Create), arg0)
}

// CreateBulkUpdate mocks base method.
func (m *MockILocationService) CreateBulkUpdate(arg0 *multipart.FileHeader) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateBulkUpdate", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateBulkUpdate indicates an expected call of CreateBulkUpdate.
func (mr *MockILocationServiceMockRecorder) CreateBulkUpdate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateBulkUpdate", reflect.TypeOf((*MockILocationService)(nil).CreateBulkUpdate), arg0)
}

// GetNearestDriver mocks base method.
func (m *MockILocationService) GetNearestDriver(arg0 *model.Location, arg1 int) (*dto.NearestDriverResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNearestDriver", arg0, arg1)
	ret0, _ := ret[0].(*dto.NearestDriverResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNearestDriver indicates an expected call of GetNearestDriver.
func (mr *MockILocationServiceMockRecorder) GetNearestDriver(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNearestDriver", reflect.TypeOf((*MockILocationService)(nil).GetNearestDriver), arg0, arg1)
}
