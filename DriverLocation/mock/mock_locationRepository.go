// Code generated by MockGen. DO NOT EDIT.
// Source: .\repository\locationRepository.go

// Package mock is a generated GoMock package.
package mock

import (
	model "driverlocation/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockILocationRepository is a mock of ILocationRepository interface.
type MockILocationRepository struct {
	ctrl     *gomock.Controller
	recorder *MockILocationRepositoryMockRecorder
}

// MockILocationRepositoryMockRecorder is the mock recorder for MockILocationRepository.
type MockILocationRepositoryMockRecorder struct {
	mock *MockILocationRepository
}

// NewMockILocationRepository creates a new mock instance.
func NewMockILocationRepository(ctrl *gomock.Controller) *MockILocationRepository {
	mock := &MockILocationRepository{ctrl: ctrl}
	mock.recorder = &MockILocationRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockILocationRepository) EXPECT() *MockILocationRepositoryMockRecorder {
	return m.recorder
}

// FindDriverInDistanceWithRadius mocks base method.
func (m *MockILocationRepository) FindDriverInDistanceWithRadius(arg0 *model.Location, arg1 int) ([]*model.Point, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindDriverInDistanceWithRadius", arg0, arg1)
	ret0, _ := ret[0].([]*model.Point)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindDriverInDistanceWithRadius indicates an expected call of FindDriverInDistanceWithRadius.
func (mr *MockILocationRepositoryMockRecorder) FindDriverInDistanceWithRadius(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindDriverInDistanceWithRadius", reflect.TypeOf((*MockILocationRepository)(nil).FindDriverInDistanceWithRadius), arg0, arg1)
}

// Insert mocks base method.
func (m *MockILocationRepository) Insert(arg0 *model.Point) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Insert", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Insert indicates an expected call of Insert.
func (mr *MockILocationRepositoryMockRecorder) Insert(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Insert", reflect.TypeOf((*MockILocationRepository)(nil).Insert), arg0)
}

// InsertBulk mocks base method.
func (m *MockILocationRepository) InsertBulk(items []interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertBulk", items)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertBulk indicates an expected call of InsertBulk.
func (mr *MockILocationRepositoryMockRecorder) InsertBulk(items interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertBulk", reflect.TypeOf((*MockILocationRepository)(nil).InsertBulk), items)
}
