// Code generated by MockGen. DO NOT EDIT.
// Source: .\controller\matchingController.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	echo "github.com/labstack/echo/v4"
)

// MockIMatchingController is a mock of IMatchingController interface.
type MockIMatchingController struct {
	ctrl     *gomock.Controller
	recorder *MockIMatchingControllerMockRecorder
}

// MockIMatchingControllerMockRecorder is the mock recorder for MockIMatchingController.
type MockIMatchingControllerMockRecorder struct {
	mock *MockIMatchingController
}

// NewMockIMatchingController creates a new mock instance.
func NewMockIMatchingController(ctrl *gomock.Controller) *MockIMatchingController {
	mock := &MockIMatchingController{ctrl: ctrl}
	mock.recorder = &MockIMatchingControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIMatchingController) EXPECT() *MockIMatchingControllerMockRecorder {
	return m.recorder
}

// FindDriver mocks base method.
func (m *MockIMatchingController) FindDriver(e echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindDriver", e)
	ret0, _ := ret[0].(error)
	return ret0
}

// FindDriver indicates an expected call of FindDriver.
func (mr *MockIMatchingControllerMockRecorder) FindDriver(e interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindDriver", reflect.TypeOf((*MockIMatchingController)(nil).FindDriver), e)
}
